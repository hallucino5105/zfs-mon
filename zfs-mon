#!/usr/bin/python3
# -*- coding: utf-8 -*-
import ujson
import queue
import locale
import curses

from zfs_monitor.collect_daemon import CollectDaemon


def main():
    locale.setlocale(locale.LC_ALL, '')

    data_queue = queue.Queue()
    daemon = CollectDaemon(data_queue)
    daemon.daemon = True
    daemon.start()
    try:
        while True:
            myscreen = curses.initscr()
            myscreen.clear()
            result = ujson.loads(data_queue.get())
            myscreen.addstr(1, 0, "ZFS real-time cache activity monitor")
            myscreen.addstr(2, 0, "Updating every second")
            myscreen.addstr(3, 0, "Cache hits and misses:")
            myscreen.addstr(4, 0, "ARC hits: %s" % result[1]["ARC_HIT"])
            myscreen.addstr(5, 0, "ARC misses: %s" % result[1]["ARC_MISS"])
            myscreen.addstr(6, 0, "ARC demand data hits: %s" %
                                  result[1]["ARC_DDH"])
            myscreen.addstr(7, 0, "ARC demand data misses: %s" %
                                  result[1]["ARC_DDM"])
            myscreen.addstr(8, 0, "ARC demand metadata hits: %s" %
                                  result[1]["ARC_DMH"])
            myscreen.addstr(9, 0, "ARC demand metadata misses: %s" %
                                  result[1]["ARC_DMM"])
            myscreen.addstr(10, 0, "ARC prefetch data hits: %s" %
                                   result[1]["ARC_PDH"])
            myscreen.addstr(11, 0, "ARC prefetch data misses: %s" %
                                   result[1]["ARC_PDM"])
            myscreen.addstr(12, 0, "ARC prefetch metadata hits: %s" %
                                   result[1]["ARC_PMH"])
            myscreen.addstr(13, 0, "ARC prefetch metadata misses: %s" %
                                   result[1]["ARC_PMM"])
            myscreen.addstr(15, 0, "L2ARC hits: %s" % result[1]["L2ARC_HIT"])
            myscreen.addstr(16, 0, "L2ARC misses: %s" % result[1]["L2ARC_MISS"])
            myscreen.addstr(18, 0, "ZFETCH hits: %s" % result[1]["ZFETCH_HIT"])
            myscreen.addstr(19, 0, "ZFETCH misses: %s" %
                                   result[1]["ZFETCH_MISS"])
            myscreen.addstr(21, 0, "ARC cache efficiency percentage: %s" %
                                   result[0]["ARC"])
            myscreen.addstr(22, 0, "ARC demand data cache efficiency "
                                   "percentage: %s" % result[0]["ARCDD"])
            myscreen.addstr(23, 0, "ARC prefetch data cache efficiency "
                                   "percentage: %s" % result[0]["ARCPD"])
            myscreen.addstr(24, 0, "ARC prefetch metadata cache efficiency "
                                   "percentage: %s" % result[0]["ARCPM"])
            myscreen.addstr(25, 0, "L2ARC cache efficiency percentage: %s" %
                                   result[0]["L2"])
            myscreen.addstr(26, 0, "ZFETCH cache efficiency percentage: %s" %
                                   result[0]["ZFETCH"])
            myscreen.refresh()
    except KeyboardInterrupt:
        curses.endwin()


if __name__ == '__main__':
    main()


